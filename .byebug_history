exit
eit
key_from_file
c
env
source_files(dir, ext)
c
ext
dir
c
ext
dir
env
c
exit
subject.source_files('tmp', '.env.enc')
env_files
exit
env_files
exit
dir
env
source_files(dir, ext)
ext
dir
env
self
ext
  n
source_files(dir)
ext
dir
env
c
File.read(env_files.last)
env_files.last
env_files.last.read
c
source_files
c
source_files
c
environment
c
environment
c
exit
directory
environment
c
file.split('.')[-2].split('/').last
file.split('.')[-2].split('/')
file.split('.', '/')
file
environment
c
ls
exit
ENV[env_key]
c
env_key
c
ENV[env_key]
env_key
File.read(key_file)
key_file
c
exit
subject.get_key('production').size
subject.get_key('production')
exit
File.read key_file
key_file
c
File.read(key_file).size
File.read(key_file)
file.read(key_file)
c
File.read(key_file)
key_file
c
source_files('.', 'productiondd.key').first
source_files('.', 'productiondd.key').flatten
source_files('.', 'productiondd.key')
source_files('', 'productiondd.key')
"production".upcase + '_KEY'
ENV["production".upcase + '_KEY']
ENV['PATH']
ENV
env
printenv
env
c
source_files('', 'production.key')
source_files('.', 'production.key')
source_files('./.', 'production.key')
source_files('./.', '.key')
c
self.initialize
self
c
@pass_phrase
@cipher
exit
e
n
key
file
c
exit
extension
directory
environment
self
args
